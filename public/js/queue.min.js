const Toast=Swal.mixin({toast:!0,position:"top-end",showConfirmButton:!1,timer:2e3});let globalChannel=document.getElementById("pageInfo").getAttribute("data-channel"),loggedInUser=document.getElementById("pageInfo").getAttribute("data-loggedIn"),enviroment=document.getElementById("pageInfo").getAttribute("data-enviroment");Sentry.init({dsn:"https://32998bbe6f964551a6680d9343ae5270@o421094.ingest.sentry.io/5340398",enviroment:enviroment}),Sentry.configureScope((function(scope){scope.setUser({username:"loggedInUser"})}));var socket=io("/req-namescape");function createSubGiftNoti(id,username,recipient,senderTotal,animate){let notiDiv=document.getElementById("noti-container"),notiElem=document.createElement("div");console.log("sub gift"),notiElem.setAttribute("id",`noti${id}`),notiElem.setAttribute("class","noti rounded-lg p-3 m-2"),notiElem.innerHTML=`\n    <p><span><i class="fas fa-gift"></i></span> <b>${username}</b> gifted <b>${recipient}</b> a sub!</p>\n    <p>They've gifted a total of ${senderTotal} sub(s) to the community!</p>\n  `,notiDiv.prepend(notiElem),animate&&gsap.from(`#noti${id}`,{x:100,duration:1,ease:"power4.out"})}function createSMG(id,username,numbOfSubs,senderTotal,subs,animate){let notiDiv=document.getElementById("noti-container"),notiElem=document.createElement("div");notiElem.setAttribute("id",`noti${id}`),notiElem.setAttribute("class","noti rounded-lg p-3 m-2"),notiElem.innerHTML=`\n      <h4><span><i class="fas fa-gifts"></i></span> ${username} gifted ${numbOfSubs} subs!</h4>\n      <p>They've gifted a total of ${senderTotal}</p>\n      <a class="btn btn-sm btn-primary" data-toggle="collapse" href="#smgsubs${id}" role="button" aria-expanded="false" aria-controls="smgsubs${id}">\n      See individual subs\n      </a>\n      <div class="collapse border p-2 m-2 rounded" id="smgsubs${id}"></div>\n      `,notiDiv.prepend(notiElem);let smgSubsDiv=document.getElementById(`smgsubs${id}`);subs.forEach(sub=>{let subElem=document.createElement("div");subElem.innerHTML=`<div>${sub.recipient}</div>`,smgSubsDiv.append(subElem)}),animate&&gsap.from(`#noti${id}`,{x:100,duration:1,ease:"power4.out"})}function createRaidNoti(id,username,viewers,animate){let notiDiv=document.getElementById("noti-container"),notiElem=document.createElement("div");notiElem.setAttribute("id",`noti${id}`),notiElem.setAttribute("class","noti rounded-lg p-3 m-2"),notiElem.innerHTML=`\n      <h4><span><i class="fas fa-parachute-box"></i></span> ${username} has raided with ${viewers} viewers!</h4>\n  `,notiDiv.prepend(notiElem),animate&&gsap.from(`#noti${id}`,{x:100,duration:1,ease:"power4.out"})}socket.emit("create",`${globalChannel}`),socket.on("socketConnect",(function(data){Toast.fire({type:"success",title:"Socket Connected!"})})),fetch(`/api/queue/${globalChannel}`).then(res=>res.json()).then(queue=>{let status=queue.allowReqs,currQueue=queue.currQueue,statusBadge=document.getElementById("status"),statusToggle=document.getElementById("statusToggle"),reqDiv=document.getElementById("requests");switch(status){case!0:statusBadge.setAttribute("class","badge badge-success"),statusBadge.innerHTML="Open",statusToggle.setAttribute("class","btn btn-danger m-2 queueToggle close-queue"),statusToggle.innerHTML="Close Queue";break;case!1:statusBadge.setAttribute("class","badge badge-danger"),statusBadge.innerHTML="Closed",statusToggle.setAttribute("class","btn btn-success m-2 queueToggle open-queue"),statusToggle.innerHTML="Open Queue"}currQueue.forEach((request,index)=>{if(null===request)return;let reqElem=document.createElement("div"),artist;artist=void 0!==request.track.artist?`- ${request.track.artist}`:"",reqElem.setAttribute("id",`${request.id}`),reqElem.setAttribute("class","song mb-3 border rounded"),reqElem.innerHTML=`\n      <div class="song-top p-2">\n        <div class="d-flex flex-column">\n            <a class="srName pl-2" href="${request.track.link}" target="_blank">\n            ${request.track.name} ${artist} </a>\n        </div>\n      </div>\n      <div class="reqBy p-2 border-bottom"><i class="far fa-user ml-2 mr-2"></i>${request.requestedBy}</div>\n      <div class="song-ctrl d-flex p-2">\n        <a href="#" data-srID="${request.id}" class="reqDelBtn p-1 flex-fill text-center rounded">\n          Delete\n        </a>\n        <a href="#" data-srID="${request.id}" data-move="down" class="moveBtn p-1 ml-1 flex-fill text-center rounded"><i class="fas fa-angle-down"></i></a>\n        <a href="#" data-srID="${request.id}" data-move="up" class="moveBtn p-1 ml-1 flex-fill text-center rounded"><i class="fas fa-angle-up"></i></a>\n        \x3c!--<a href="#" data-uri="${request.track.uri}" class="playBtn p-1 flex-fill text-center">Play <i class="fas fa-play-circle"></i></a>--\x3e\n      </div>\n    `,reqDiv.prepend(reqElem)})}).catch(err=>{console.error("Error retreving queue")}),fetch(`/api/events/${globalChannel}`).then(res=>res.json()).then(events=>{events.forEach(event=>{let noti=event.data;switch(console.log(noti),event.type){case"mysterysubgift":createSMG(noti._id,noti.userGivingSubs,noti.subsGifted,noti.senderTotal,noti.subs);break;case"subgift":console.log("sub gift"),createSubGiftNoti(noti._id,noti.username,noti.recipient,noti.senderTotal);break;case"raid":console.log("raid"),createRaidNoti(noti._id,noti.username,noti.viewers)}})}),document.addEventListener("click",e=>{if(e.preventDefault(),e.target.matches(".open-queue")){console.log("open");var xhr=new XMLHttpRequest;xhr.open("PUT",`/api/queues/${globalChannel}/status/open`),xhr.onload=function(){let statusBadge=document.getElementById("status"),statusToggle=document.getElementById("statusToggle");200===xhr.status?(statusBadge.setAttribute("class","badge badge-success"),statusBadge.innerHTML="Open",statusToggle.setAttribute("class","btn btn-danger m-2 queueToggle close-queue"),statusToggle.innerHTML="Close Queue"):swal.fire({type:"error",title:"Error opening queue!",text:`${xhr.responseText}`})},xhr.send()}},!1),document.addEventListener("click",e=>{if(e.preventDefault(),e.target.matches(".close-queue")){console.log("close");var xhr=new XMLHttpRequest;xhr.open("PUT",`/api/queues/${globalChannel}/status/close`),xhr.onload=function(){let statusBadge=document.getElementById("status"),statusToggle=document.getElementById("statusToggle");200===xhr.status?(statusBadge.setAttribute("class","badge badge-danger"),statusBadge.innerHTML="Closed",statusToggle.setAttribute("class","btn btn-success m-2 queueToggle open-queue"),statusToggle.innerHTML="Open Queue"):swal.fire({type:"error",title:"Error closing queue!",text:`${xhr.responseText}`})},xhr.send()}},!1),socket.on("sr-event",request=>{try{console.log("New Request"),console.log(request);let reqDiv=document.getElementById("requests"),reqElem=document.createElement("div"),artist;artist=void 0!==request.artist?`- ${request.artist}`:"",reqElem.setAttribute("class","song mb-3 border"),reqElem.setAttribute("id",`req${request.id}`),reqElem.innerHTML=`\n      <div class="song-top p-2">\n        <div class="d-flex flex-column">\n            <a class="srName pl-2" href="${request.link}" target="_blank">\n            ${request.track} ${artist} </a>\n        </div>\n      </div>\n      <div class="reqBy p-2"><i class="far fa-user ml-2 mr-2"></i>${request.reqBy}</div>\n      <div class="song-ctrl d-flex p-2">\n        <a href="#" data-srID="req${request.id}" class="reqDelBtn p-1 flex-fill text-center">\n          Delete\n        </a>\n        <a href="#" data-srID="req${request.id}" data-move="down" class="moveBtn p-1 ml-1 flex-fill text-center rounded"><i class="fas fa-angle-down"></i></a>\n        <a href="#" data-srID="req${request.id}" data-move="up" class="moveBtn p-1 ml-1 flex-fill text-center rounded"><i class="fas fa-angle-up"></i></a>\n        \x3c!--<a href="#" data-uri="${request.uri}" class="playBtn p-1 flex-fill text-center">Play <i class="fas fa-play-circle"></i></a>--\x3e\n      </div>\n    `,reqDiv.prepend(reqElem),gsap.from(`#req${request.id}`,{opacity:0,y:-50,duration:.5,ease:"power4.out"})}catch(err){console.error(err)}}),socket.on("noti",noti=>{let notiDiv=document.getElementById("noti-container"),notiElem=document.createElement("div");switch(console.log(noti),noti.type){case"mysterysubgift":createSMG(noti.id,noti.userGivingSubs,noti.subsGifted,noti.senderTotal,noti.subs,!0);break;case"subgift":createSubGiftNoti(noti.id,noti.username,noti.recipient,noti.senderTotal,!0);break;case"raid":createRaidNoti(noti._id,noti.username,noti.viewers,!0)}});var timeDiff=setInterval(reqTime,1e3);function reqTime(){$(".timeReq").each((function(){var ago=moment.utc(`${$(this).attr("data-time")}`).fromNow();$(this).text(`${ago}`)}))}function removeDiv(div){let srDiv;console.log(div),document.getElementById(div).remove()}document.addEventListener("click",e=>{if(e.target.matches(".moveBtn")){e.preventDefault(),console.log(e.target.getAttribute("data-srID"));var srId=e.target.getAttribute("data-srID"),move=e.target.getAttribute("data-move"),xhr=new XMLHttpRequest;xhr.open("PUT",`/api/queues/${globalChannel}/move-${move}/${srId}`),xhr.onload=function(){if(200===xhr.status)try{let songs;Toast.fire({type:"success",title:`Song moved ${move}`}),document.querySelectorAll(".song").forEach(song=>{song.remove()});let reqDiv=document.getElementById("requests"),newQueue;JSON.parse(xhr.response).forEach((request,index)=>{if(null===request)return;let reqElem=document.createElement("div"),artist;artist=void 0!==request.track.artist?`- ${request.track.artist}`:"",reqElem.setAttribute("id",`${request.id}`),reqElem.setAttribute("class","song mb-3 border rounded"),reqElem.innerHTML=`\n              <div class="song-top p-2">\n                <div class="d-flex flex-column">\n                    <a class="srName pl-2" href="${request.track.link}" target="_blank">\n                    ${request.track.name} ${artist} </a>\n                </div>\n              </div>\n              <div class="reqBy p-2 border-bottom"><i class="far fa-user ml-2 mr-2"></i>${request.requestedBy}</div>\n              <div class="song-ctrl d-flex p-2">\n                <a href="#" data-srID="req${request.id}" class="reqDelBtn p-1 flex-fill text-center rounded">\n                  Delete\n                </a>\n                <a href="#" data-srID="req${request.id}" data-move="down" class="moveBtn p-1 ml-1 flex-fill text-center rounded"><i class="fas fa-angle-down"></i></a>\n                <a href="#" data-srID="req${request.id}" data-move="up" class="moveBtn p-1 ml-1 flex-fill text-center rounded"><i class="fas fa-angle-up"></i></a>\n                \x3c!--<a href="#" data-uri="${request.track.uri}" class="playBtn p-1 flex-fill text-center">Play <i class="fas fa-play-circle"></i></a>--\x3e\n              </div>\n            `,reqDiv.prepend(reqElem)})}catch(err){console.error(err)}else swal.fire({type:"error",title:"Error moving song!",text:`${xhr.responseText}`})},xhr.send()}},!1),document.addEventListener("click",e=>{if(e.target.matches(".reqDelBtn")){e.preventDefault(),console.log(e.target.getAttribute("data-srID"));var srID=e.target.getAttribute("data-srID"),xhr=new XMLHttpRequest;xhr.open("DELETE",`/api/queues/${globalChannel}/delete-song/${srID}`),xhr.onload=function(){if(200===xhr.status)try{removeDiv(`${srID}`),Toast.fire({type:"success",title:"Song Request removed!"})}catch(err){console.error(err)}else swal.fire({type:"error",title:"Error deleting song!",text:`${xhr.responseText}`})},xhr.send()}},!1),document.addEventListener("click",e=>{e.target.matches(".delete-reqs")&&(e.preventDefault(),swal.fire({title:"Are you sure you want to clear the queue?",text:"You won't be able to revert this!",type:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Yes, delete it!"}).then(result=>{if(result.value){var xhr=new XMLHttpRequest;xhr.open("DELETE",`/api/requests/${globalChannel}/clearqueue`),xhr.onload=function(){200===xhr.status?Swal.fire({title:"Cleared!",text:"Queue has been cleared.",type:"success",timer:500,allowOutsideClick:!1,allowEscapeKey:!1,onBeforeOpen:()=>{Swal.showLoading()},onClose:()=>{let songs=document.querySelectorAll(".song");console.log(songs),songs.forEach(song=>{song.remove()})}}):Swal.fire("Uh Oh!",`There was an error clearing the queue. Error: ${xhr.responseText}`,"error")},xhr.send()}}))},!1);