const Toast=Swal.mixin({toast:!0,position:"top-end",showConfirmButton:!1,timer:2e3});let globalChannel=document.getElementById("pageInfo").getAttribute("data-channel");var socket=io("/req-namescape");socket.emit("create",`${globalChannel}`),socket.on("socketConnect",(function(data){Toast.fire({type:"success",title:"Socket Connected!"})})),fetch(`/api/queue/${globalChannel}`).then(res=>res.json()).then(requests=>{console.log(requests);let reqDiv=document.getElementById("requests");requests.forEach((request,index)=>{if(null===request)return;let reqElem=document.createElement("div"),artist;artist=void 0!==request.track.artist?`- ${request.track.artist}`:"",reqElem.setAttribute("id",`${request.id}`),reqElem.setAttribute("class","song mb-3 border rounded"),reqElem.innerHTML=`\n      <div class="song-top p-2">\n        <div class="d-flex flex-column">\n            <a class="srName pl-2" href="${request.track.link}" target="_blank">\n            ${request.track.name} ${artist} </a>\n        </div>\n      </div>\n      <div class="reqBy p-2 border-bottom"><i class="far fa-user ml-2 mr-2"></i>${request.requestedBy}</div>\n      <div class="song-ctrl d-flex p-2">\n        <a href="#" data-srID="${request.id}" class="reqDelBtn p-1 flex-fill text-center rounded">\n          Delete\n        </a>\n        <a href="#" data-srID="${request.id}" data-move="down" class="moveBtn p-1 ml-1 flex-fill text-center rounded"><i class="fas fa-angle-down"></i></a>\n        <a href="#" data-srID="${request.id}" data-move="up" class="moveBtn p-1 ml-1 flex-fill text-center rounded"><i class="fas fa-angle-up"></i></a>\n        \x3c!--<a href="#" data-uri="${request.track.uri}" class="playBtn p-1 flex-fill text-center">Play <i class="fas fa-play-circle"></i></a>--\x3e\n      </div>\n    `,reqDiv.prepend(reqElem)})}),socket.on("sr-event",request=>{try{console.log("New Request"),console.log(request);let reqDiv=document.getElementById("requests"),reqElem=document.createElement("div"),artist;artist=void 0!==request.artist?`- ${request.artist}`:"",reqElem.setAttribute("class","song mb-3 border"),reqElem.setAttribute("id",`${request.id}`),reqElem.innerHTML=`\n      <div class="song-top p-2">\n        <div class="d-flex flex-column">\n            <a class="srName pl-2" href="${request.link}" target="_blank">\n            ${request.track} ${artist} </a>\n        </div>\n      </div>\n      <div class="reqBy p-2"><i class="far fa-user ml-2 mr-2"></i>${request.reqBy}</div>\n      <div class="song-ctrl d-flex p-2">\n        <a href="#" data-srID="${request.id}" class="reqDelBtn p-1 flex-fill text-center">\n          Delete\n        </a>\n        <a href="#" data-srID="${request.id}" data-move="down" class="moveBtn p-1 ml-1 flex-fill text-center rounded"><i class="fas fa-angle-down"></i></a>\n        <a href="#" data-srID="${request.id}" data-move="up" class="moveBtn p-1 ml-1 flex-fill text-center rounded"><i class="fas fa-angle-up"></i></a>\n        \x3c!--<a href="#" data-uri="${request.uri}" class="playBtn p-1 flex-fill text-center">Play <i class="fas fa-play-circle"></i></a>--\x3e\n      </div>\n    `,reqDiv.prepend(reqElem)}catch(err){console.error(err)}});var timeDiff=setInterval(reqTime,1e3);function reqTime(){$(".timeReq").each((function(){var ago=moment.utc(`${$(this).attr("data-time")}`).fromNow();$(this).text(`${ago}`)}))}document.addEventListener("click",e=>{if(e.target.matches(".moveBtn")){e.preventDefault(),console.log(e.target.getAttribute("data-srID"));var srId=e.target.getAttribute("data-srID"),move=e.target.getAttribute("data-move"),xhr=new XMLHttpRequest;xhr.open("PUT",`/api/queues/${globalChannel}/move-${move}/${srId}`),xhr.onload=function(){if(200===xhr.status)try{let songs;Toast.fire({type:"success",title:`Song moved ${move}`}),document.querySelectorAll(".song").forEach(song=>{song.remove()});let reqDiv=document.getElementById("requests"),newQueue;JSON.parse(xhr.response).forEach((request,index)=>{if(null===request)return;let reqElem=document.createElement("div"),artist;artist=void 0!==request.track.artist?`- ${request.track.artist}`:"",reqElem.setAttribute("id",`${request.id}`),reqElem.setAttribute("class","song mb-3 border rounded"),reqElem.innerHTML=`\n              <div class="song-top p-2">\n                <div class="d-flex flex-column">\n                    <a class="srName pl-2" href="${request.track.link}" target="_blank">\n                    ${request.track.name} ${artist} </a>\n                </div>\n              </div>\n              <div class="reqBy p-2 border-bottom"><i class="far fa-user ml-2 mr-2"></i>${request.requestedBy}</div>\n              <div class="song-ctrl d-flex p-2">\n                <a href="#" data-srID="${request.id}" class="reqDelBtn p-1 flex-fill text-center rounded">\n                  Delete\n                </a>\n                <a href="#" data-srID="${request.id}" data-move="down" class="moveBtn p-1 ml-1 flex-fill text-center rounded"><i class="fas fa-angle-down"></i></a>\n                <a href="#" data-srID="${request.id}" data-move="up" class="moveBtn p-1 ml-1 flex-fill text-center rounded"><i class="fas fa-angle-up"></i></a>\n                \x3c!--<a href="#" data-uri="${request.track.uri}" class="playBtn p-1 flex-fill text-center">Play <i class="fas fa-play-circle"></i></a>--\x3e\n              </div>\n            `,reqDiv.prepend(reqElem)})}catch(err){console.error(err)}else swal.fire({type:"error",title:"Error moving song!",text:`${xhr.responseText}`})},xhr.send()}},!1),document.addEventListener("click",e=>{if(e.target.matches(".reqDelBtn")){e.preventDefault(),console.log(e.target.getAttribute("data-srID"));var srID=e.target.getAttribute("data-srID"),xhr=new XMLHttpRequest;xhr.open("DELETE",`/api/queues/${globalChannel}/delete-song/${srID}`),xhr.onload=function(){if(200===xhr.status)try{let srDiv;document.getElementById(`${srID}`).remove(),Toast.fire({type:"success",title:"Song Request removed!"})}catch(err){console.error(err)}else swal.fire({type:"error",title:"Error deleting song!",text:`${xhr.responseText}`})},xhr.send()}},!1),document.addEventListener("click",e=>{if(e.target.matches(".delMixBtn")){e.preventDefault(),console.log(e.target.getAttribute("data-srID"));var srID=e.target.getAttribute("data-srID"),xhr=new XMLHttpRequest;xhr.open("DELETE",`/api/mixes/${globalChannel}/delete/${srID}`),xhr.onload=function(){if(200===xhr.status)try{let songDiv;document.getElementById(`mix${srID}`).remove(),Toast.fire({type:"success",title:"Song Request removed!"})}catch(err){console.error(err)}else swal.fire({type:"error",title:"Error deleting song!",text:`${xhr.responseText}`})},xhr.send()}},!1),document.addEventListener("click",e=>{e.target.matches(".delete-reqs")&&(e.preventDefault(),swal.fire({title:"Are you sure you want to clear the queue?",text:"You won't be able to revert this!",type:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Yes, delete it!"}).then(result=>{if(result.value){var xhr=new XMLHttpRequest;xhr.open("DELETE",`/api/requests/${globalChannel}/clearqueue`),xhr.onload=function(){200===xhr.status?Swal.fire({title:"Cleared!",text:"Queue has been cleared.",type:"success",timer:500,allowOutsideClick:!1,allowEscapeKey:!1,onBeforeOpen:()=>{Swal.showLoading()},onClose:()=>{let songs=document.querySelectorAll(".song");console.log(songs),songs.forEach(song=>{song.remove()})}}):Swal.fire("Uh Oh!",`There was an error clearing the queue. Error: ${xhr.responseText}`,"error")},xhr.send()}}))},!1),document.addEventListener("click",e=>{e.target.matches(".delete-mix")&&(e.preventDefault(),swal.fire({title:"Are you sure you want to clear the queue?",text:"You won't be able to revert this!",type:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Yes, delete it!"}).then(result=>{if(result.value){var xhr=new XMLHttpRequest;xhr.open("DELETE",`/api/mixes/${globalChannel}/clear`),xhr.onload=function(){200===xhr.status?Swal.fire({title:"Cleared!",text:"Queue has been cleared.",type:"success",timer:500,allowOutsideClick:!1,allowEscapeKey:!1,onBeforeOpen:()=>{Swal.showLoading()},onClose:()=>{let songs=document.querySelectorAll(".mix-song");console.log(songs),songs.forEach(song=>{song.remove()})}}):Swal.fire("Uh Oh!",`There was an error clearing the mix. Error: ${xhr.responseText}`,"error")},xhr.send()}}))},!1);